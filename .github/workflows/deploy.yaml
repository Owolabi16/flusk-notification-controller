name: Build and Auto-Deploy.

on:
  push:
    branches:
      - main
      - staging
    paths:
      - 'sample-app/**'
      - 'flux/**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE_NAME: sample-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "version=v1.0.${{ github.run_number }}" >> $GITHUB_OUTPUT
          else
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "version=v1.0.${{ github.run_number }}-staging" >> $GITHUB_OUTPUT
          fi
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./sample-app
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.environment }}-latest
      
      - name: Update manifests
        run: |
          # Update Chart.yaml
          sed -i "s/version:.*/version: ${{ steps.version.outputs.version }}/" sample-app/helm-chart/Chart.yaml
          sed -i "s/appVersion:.*/appVersion: \"${{ steps.version.outputs.version }}\"/" sample-app/helm-chart/Chart.yaml
          
          # Update values.yaml
          sed -i "s|repository:.*|repository: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}|" sample-app/helm-chart/values.yaml
          sed -i "s|tag:.*|tag: \"${{ steps.version.outputs.version }}\"|" sample-app/helm-chart/values.yaml
          
          # Update HelmRelease in clusters/kind/apps (this is what Flux watches!)
          sed -i "s|repository:.*|repository: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}|" clusters/kind/apps/${{ steps.version.outputs.environment }}-helmrelease.yaml
          sed -i "s|tag:.*|tag: \"${{ steps.version.outputs.version }}\"|" clusters/kind/apps/${{ steps.version.outputs.environment }}-helmrelease.yaml
          
          # Also update the old location for backward compatibility
          sed -i "s|repository:.*|repository: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}|" flux/${{ steps.version.outputs.environment }}-helmrelease.yaml
          sed -i "s|tag:.*|tag: \"${{ steps.version.outputs.version }}\"|" flux/${{ steps.version.outputs.environment }}-helmrelease.yaml
            
      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Add all modified files
          git add sample-app/helm-chart/Chart.yaml
          git add sample-app/helm-chart/values.yaml
          git add clusters/kind/apps/${{ steps.version.outputs.environment }}-helmrelease.yaml
          git add flux/${{ steps.version.outputs.environment }}-helmrelease.yaml
          
          # Commit with detailed message
          git commit -m "ðŸš€ Deploy ${{ steps.version.outputs.version }} to ${{ steps.version.outputs.environment }}

          - Updated chart version to ${{ steps.version.outputs.version }}
          - Updated image tag to ${{ steps.version.outputs.version }}
          - Updated HelmRelease manifests" || echo "No changes"
          
          # Push with retry logic
          for i in {1..3}; do
            git pull --rebase origin ${{ github.ref_name }} && git push && break || sleep 5
          done
      
      - name: Summary
        run: |
          echo "### ðŸŽ‰ Deployment" >> $GITHUB_STEP_SUMMARY
          echo "- Environment: ${{ steps.version.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- Version: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Image: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY